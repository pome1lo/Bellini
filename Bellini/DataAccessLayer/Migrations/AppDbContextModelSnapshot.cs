// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Models.AnswerOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("AnswerOptions", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("ProfileImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.CompletedAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("SelectedOptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("SelectedOptionId");

                    b.ToTable("CompletedAnswers");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GameCoverImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GameStatusId")
                        .HasColumnType("int");

                    b.Property<int>("HostId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<int>("MaxPlayers")
                        .HasColumnType("int");

                    b.Property<string>("RoomPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GameStatusId");

                    b.ToTable("Games", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.GameStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("GameStatuses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Not started"
                        },
                        new
                        {
                            Id = 2,
                            Name = "In process"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Completed"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("Players", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Questions", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GameCoverImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Quizzes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameCoverImageUrl = "https://i.pinimg.com/originals/b3/7e/4f/b37e4fd167bd9e14558dd14301ec6487.jpg",
                            GameName = "Мифология Древней Греции",
                            StartTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EndTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameCoverImageUrl = "https://i.pinimg.com/originals/b3/7e/4f/b37e4fd167bd9e14558dd14301ec6487.jpg",
                            GameName = "Древний Рим",
                            StartTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.QuizAnswerOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuizQuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("QuizQuestionId");

                    b.ToTable("QuizAnswerOptions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsCorrect = false,
                            QuizQuestionId = 1,
                            Text = "Посейдон"
                        },
                        new
                        {
                            Id = 2,
                            IsCorrect = false,
                            QuizQuestionId = 1,
                            Text = "Геракл"
                        },
                        new
                        {
                            Id = 3,
                            IsCorrect = true,
                            QuizQuestionId = 1,
                            Text = "Зевс"
                        },
                        new
                        {
                            Id = 4,
                            IsCorrect = false,
                            QuizQuestionId = 1,
                            Text = "Аполлон"
                        },
                        new
                        {
                            Id = 5,
                            IsCorrect = false,
                            QuizQuestionId = 2,
                            Text = "Арес"
                        },
                        new
                        {
                            Id = 6,
                            IsCorrect = true,
                            QuizQuestionId = 2,
                            Text = "Гефест"
                        },
                        new
                        {
                            Id = 7,
                            IsCorrect = false,
                            QuizQuestionId = 2,
                            Text = "Аполлон"
                        },
                        new
                        {
                            Id = 8,
                            IsCorrect = false,
                            QuizQuestionId = 2,
                            Text = "Зевс"
                        },
                        new
                        {
                            Id = 9,
                            IsCorrect = false,
                            QuizQuestionId = 3,
                            Text = "Гермес"
                        },
                        new
                        {
                            Id = 10,
                            IsCorrect = true,
                            QuizQuestionId = 3,
                            Text = "Посейдон"
                        },
                        new
                        {
                            Id = 11,
                            IsCorrect = false,
                            QuizQuestionId = 3,
                            Text = "Дионис"
                        },
                        new
                        {
                            Id = 12,
                            IsCorrect = false,
                            QuizQuestionId = 3,
                            Text = "Афина"
                        },
                        new
                        {
                            Id = 13,
                            IsCorrect = false,
                            QuizQuestionId = 4,
                            Text = "Гера"
                        },
                        new
                        {
                            Id = 14,
                            IsCorrect = true,
                            QuizQuestionId = 4,
                            Text = "Афина"
                        },
                        new
                        {
                            Id = 15,
                            IsCorrect = false,
                            QuizQuestionId = 4,
                            Text = "Артемида"
                        },
                        new
                        {
                            Id = 16,
                            IsCorrect = false,
                            QuizQuestionId = 4,
                            Text = "Персефона"
                        },
                        new
                        {
                            Id = 17,
                            IsCorrect = false,
                            QuizQuestionId = 5,
                            Text = "Гермес"
                        },
                        new
                        {
                            Id = 18,
                            IsCorrect = true,
                            QuizQuestionId = 5,
                            Text = "Арес"
                        },
                        new
                        {
                            Id = 19,
                            IsCorrect = false,
                            QuizQuestionId = 5,
                            Text = "Зевс"
                        },
                        new
                        {
                            Id = 20,
                            IsCorrect = false,
                            QuizQuestionId = 5,
                            Text = "Аполлон"
                        },
                        new
                        {
                            Id = 21,
                            IsCorrect = false,
                            QuizQuestionId = 6,
                            Text = "Гера"
                        },
                        new
                        {
                            Id = 22,
                            IsCorrect = true,
                            QuizQuestionId = 6,
                            Text = "Артемида"
                        },
                        new
                        {
                            Id = 23,
                            IsCorrect = false,
                            QuizQuestionId = 6,
                            Text = "Афродита"
                        },
                        new
                        {
                            Id = 24,
                            IsCorrect = false,
                            QuizQuestionId = 6,
                            Text = "Афина"
                        },
                        new
                        {
                            Id = 25,
                            IsCorrect = true,
                            QuizQuestionId = 7,
                            Text = "Гермес"
                        },
                        new
                        {
                            Id = 26,
                            IsCorrect = false,
                            QuizQuestionId = 7,
                            Text = "Аполлон"
                        },
                        new
                        {
                            Id = 27,
                            IsCorrect = false,
                            QuizQuestionId = 7,
                            Text = "Арес"
                        },
                        new
                        {
                            Id = 28,
                            IsCorrect = false,
                            QuizQuestionId = 7,
                            Text = "Дионис"
                        },
                        new
                        {
                            Id = 29,
                            IsCorrect = false,
                            QuizQuestionId = 8,
                            Text = "Арес"
                        },
                        new
                        {
                            Id = 30,
                            IsCorrect = true,
                            QuizQuestionId = 8,
                            Text = "Аполлон"
                        },
                        new
                        {
                            Id = 31,
                            IsCorrect = false,
                            QuizQuestionId = 8,
                            Text = "Зевс"
                        },
                        new
                        {
                            Id = 32,
                            IsCorrect = false,
                            QuizQuestionId = 8,
                            Text = "Гермес"
                        },
                        new
                        {
                            Id = 33,
                            IsCorrect = false,
                            QuizQuestionId = 9,
                            Text = "Афина"
                        },
                        new
                        {
                            Id = 34,
                            IsCorrect = false,
                            QuizQuestionId = 9,
                            Text = "Артемида"
                        },
                        new
                        {
                            Id = 35,
                            IsCorrect = true,
                            QuizQuestionId = 9,
                            Text = "Афродита"
                        },
                        new
                        {
                            Id = 36,
                            IsCorrect = false,
                            QuizQuestionId = 9,
                            Text = "Гера"
                        },
                        new
                        {
                            Id = 37,
                            IsCorrect = false,
                            QuizQuestionId = 10,
                            Text = "Кронос"
                        },
                        new
                        {
                            Id = 38,
                            IsCorrect = false,
                            QuizQuestionId = 10,
                            Text = "Гиперион"
                        },
                        new
                        {
                            Id = 39,
                            IsCorrect = true,
                            QuizQuestionId = 10,
                            Text = "Атлас"
                        },
                        new
                        {
                            Id = 40,
                            IsCorrect = false,
                            QuizQuestionId = 10,
                            Text = "Гигант"
                        },
                        new
                        {
                            Id = 41,
                            IsCorrect = true,
                            QuizQuestionId = 11,
                            Text = "Ромул"
                        },
                        new
                        {
                            Id = 42,
                            IsCorrect = false,
                            QuizQuestionId = 11,
                            Text = "Рем"
                        },
                        new
                        {
                            Id = 43,
                            IsCorrect = false,
                            QuizQuestionId = 11,
                            Text = "Цезарь"
                        },
                        new
                        {
                            Id = 44,
                            IsCorrect = false,
                            QuizQuestionId = 11,
                            Text = "Август"
                        },
                        new
                        {
                            Id = 45,
                            IsCorrect = false,
                            QuizQuestionId = 12,
                            Text = "Нерон"
                        },
                        new
                        {
                            Id = 46,
                            IsCorrect = true,
                            QuizQuestionId = 12,
                            Text = "Август"
                        },
                        new
                        {
                            Id = 47,
                            IsCorrect = false,
                            QuizQuestionId = 12,
                            Text = "Тиберий"
                        },
                        new
                        {
                            Id = 48,
                            IsCorrect = false,
                            QuizQuestionId = 12,
                            Text = "Клавдий"
                        },
                        new
                        {
                            Id = 49,
                            IsCorrect = true,
                            QuizQuestionId = 13,
                            Text = "Юпитер"
                        },
                        new
                        {
                            Id = 50,
                            IsCorrect = false,
                            QuizQuestionId = 13,
                            Text = "Марс"
                        },
                        new
                        {
                            Id = 51,
                            IsCorrect = false,
                            QuizQuestionId = 13,
                            Text = "Венера"
                        },
                        new
                        {
                            Id = 52,
                            IsCorrect = false,
                            QuizQuestionId = 13,
                            Text = "Сатурн"
                        },
                        new
                        {
                            Id = 53,
                            IsCorrect = false,
                            QuizQuestionId = 14,
                            Text = "Панем"
                        },
                        new
                        {
                            Id = 54,
                            IsCorrect = false,
                            QuizQuestionId = 14,
                            Text = "Луперкалии"
                        },
                        new
                        {
                            Id = 55,
                            IsCorrect = true,
                            QuizQuestionId = 14,
                            Text = "Тритон"
                        },
                        new
                        {
                            Id = 56,
                            IsCorrect = false,
                            QuizQuestionId = 14,
                            Text = "Сатурналии"
                        },
                        new
                        {
                            Id = 57,
                            IsCorrect = true,
                            QuizQuestionId = 15,
                            Text = "Ганнибал"
                        },
                        new
                        {
                            Id = 58,
                            IsCorrect = false,
                            QuizQuestionId = 15,
                            Text = "Цезарь"
                        },
                        new
                        {
                            Id = 59,
                            IsCorrect = false,
                            QuizQuestionId = 15,
                            Text = "Октавиан"
                        },
                        new
                        {
                            Id = 60,
                            IsCorrect = false,
                            QuizQuestionId = 15,
                            Text = "Сципион"
                        },
                        new
                        {
                            Id = 61,
                            IsCorrect = true,
                            QuizQuestionId = 16,
                            Text = "Колизей"
                        },
                        new
                        {
                            Id = 62,
                            IsCorrect = false,
                            QuizQuestionId = 16,
                            Text = "Пантеон"
                        },
                        new
                        {
                            Id = 63,
                            IsCorrect = false,
                            QuizQuestionId = 16,
                            Text = "Форум"
                        },
                        new
                        {
                            Id = 64,
                            IsCorrect = false,
                            QuizQuestionId = 16,
                            Text = "Кирка"
                        },
                        new
                        {
                            Id = 65,
                            IsCorrect = true,
                            QuizQuestionId = 17,
                            Text = "Латинский"
                        },
                        new
                        {
                            Id = 66,
                            IsCorrect = false,
                            QuizQuestionId = 17,
                            Text = "Греческий"
                        },
                        new
                        {
                            Id = 67,
                            IsCorrect = false,
                            QuizQuestionId = 17,
                            Text = "Еврейский"
                        },
                        new
                        {
                            Id = 68,
                            IsCorrect = false,
                            QuizQuestionId = 17,
                            Text = "Арабский"
                        },
                        new
                        {
                            Id = 69,
                            IsCorrect = true,
                            QuizQuestionId = 18,
                            Text = "Архитектура"
                        },
                        new
                        {
                            Id = 70,
                            IsCorrect = false,
                            QuizQuestionId = 18,
                            Text = "Живопись"
                        },
                        new
                        {
                            Id = 71,
                            IsCorrect = false,
                            QuizQuestionId = 18,
                            Text = "Музыка"
                        },
                        new
                        {
                            Id = 72,
                            IsCorrect = false,
                            QuizQuestionId = 18,
                            Text = "Скульптура"
                        },
                        new
                        {
                            Id = 73,
                            IsCorrect = false,
                            QuizQuestionId = 19,
                            Text = "Монархия"
                        },
                        new
                        {
                            Id = 74,
                            IsCorrect = true,
                            QuizQuestionId = 19,
                            Text = "Республика"
                        },
                        new
                        {
                            Id = 75,
                            IsCorrect = false,
                            QuizQuestionId = 19,
                            Text = "Демократия"
                        },
                        new
                        {
                            Id = 76,
                            IsCorrect = false,
                            QuizQuestionId = 19,
                            Text = "Олигархия"
                        },
                        new
                        {
                            Id = 77,
                            IsCorrect = false,
                            QuizQuestionId = 20,
                            Text = "V веке до н.э."
                        },
                        new
                        {
                            Id = 78,
                            IsCorrect = true,
                            QuizQuestionId = 20,
                            Text = "IV веке н.э."
                        },
                        new
                        {
                            Id = 79,
                            IsCorrect = false,
                            QuizQuestionId = 20,
                            Text = "III веке до н.э."
                        },
                        new
                        {
                            Id = 80,
                            IsCorrect = false,
                            QuizQuestionId = 20,
                            Text = "I веке до н.э."
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.QuizQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("QuizQuestions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuizId = 1,
                            Text = "Кто был верховным богом в греческой мифологии?"
                        },
                        new
                        {
                            Id = 2,
                            QuizId = 1,
                            Text = "Какой бог был покровителем кузнецов и огня?"
                        },
                        new
                        {
                            Id = 3,
                            QuizId = 1,
                            Text = "Кто был богом моря?"
                        },
                        new
                        {
                            Id = 4,
                            QuizId = 1,
                            Text = "Кто был богиней мудрости?"
                        },
                        new
                        {
                            Id = 5,
                            QuizId = 1,
                            Text = "Кто был богом войны?"
                        },
                        new
                        {
                            Id = 6,
                            QuizId = 1,
                            Text = "Кто был богиней охоты?"
                        },
                        new
                        {
                            Id = 7,
                            QuizId = 1,
                            Text = "Кто был вестником богов?"
                        },
                        new
                        {
                            Id = 8,
                            QuizId = 1,
                            Text = "Кто был богом солнца?"
                        },
                        new
                        {
                            Id = 9,
                            QuizId = 1,
                            Text = "Кто был богиней любви и красоты?"
                        },
                        new
                        {
                            Id = 10,
                            QuizId = 1,
                            Text = "Кто был титаном, держащим небо на своих плечах?"
                        },
                        new
                        {
                            Id = 11,
                            QuizId = 2,
                            Text = "Кто был основателем Рима?"
                        },
                        new
                        {
                            Id = 12,
                            QuizId = 2,
                            Text = "Какой был последний император Рима?"
                        },
                        new
                        {
                            Id = 13,
                            QuizId = 2,
                            Text = "Какой бог был покровителем Рима?"
                        },
                        new
                        {
                            Id = 14,
                            QuizId = 2,
                            Text = "Какой праздник был посвящен славе императоров?"
                        },
                        new
                        {
                            Id = 15,
                            QuizId = 2,
                            Text = "Кто был великим полководцем Рима?"
                        },
                        new
                        {
                            Id = 16,
                            QuizId = 2,
                            Text = "Какое здание является символом Рима?"
                        },
                        new
                        {
                            Id = 17,
                            QuizId = 2,
                            Text = "Какой язык был официальным в Риме?"
                        },
                        new
                        {
                            Id = 18,
                            QuizId = 2,
                            Text = "Какое искусство было популярно в Риме?"
                        },
                        new
                        {
                            Id = 19,
                            QuizId = 2,
                            Text = "Какой строй был установлен в Риме?"
                        },
                        new
                        {
                            Id = 20,
                            QuizId = 2,
                            Text = "Какой век считается временем расцвета Рима?"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.QuizResults", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NumberOfCorrectAnswers")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfQuestions")
                        .HasColumnType("int");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.HasIndex("UserId");

                    b.ToTable("QuizResults", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.AnswerOption", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Question", "Question")
                        .WithMany("AnswerOptions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Comment", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Game", "Game")
                        .WithMany("Comments")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("DataAccessLayer.Models.CompletedAnswer", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Game", "Game")
                        .WithMany("CompletedAnswers")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Models.AnswerOption", "SelectedOption")
                        .WithMany()
                        .HasForeignKey("SelectedOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");

                    b.Navigation("Question");

                    b.Navigation("SelectedOption");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Game", b =>
                {
                    b.HasOne("DataAccessLayer.Models.GameStatus", "Status")
                        .WithMany("Games")
                        .HasForeignKey("GameStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Player", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Game", "Game")
                        .WithMany("Players")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Question", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Game", "Game")
                        .WithMany("Questions")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("DataAccessLayer.Models.QuizAnswerOption", b =>
                {
                    b.HasOne("DataAccessLayer.Models.QuizQuestion", "QuizQuestion")
                        .WithMany("AnswerOptions")
                        .HasForeignKey("QuizQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuizQuestion");
                });

            modelBuilder.Entity("DataAccessLayer.Models.QuizQuestion", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("DataAccessLayer.Models.QuizResults", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Quiz", "Quiz")
                        .WithMany("QuizResults")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Models.User", "User")
                        .WithMany("QuizResults")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Game", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("CompletedAnswers");

                    b.Navigation("Players");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("DataAccessLayer.Models.GameStatus", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Question", b =>
                {
                    b.Navigation("AnswerOptions");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Quiz", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("QuizResults");
                });

            modelBuilder.Entity("DataAccessLayer.Models.QuizQuestion", b =>
                {
                    b.Navigation("AnswerOptions");
                });

            modelBuilder.Entity("DataAccessLayer.Models.User", b =>
                {
                    b.Navigation("QuizResults");
                });
#pragma warning restore 612, 618
        }
    }
}
